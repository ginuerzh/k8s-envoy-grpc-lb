apiVersion: v1
kind: Namespace
metadata:
  name: grpc-lb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user
  namespace: grpc-lb
spec:
  replicas: 3
  minReadySeconds: 10
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: user
  template:
    metadata:
      name: user
      labels:
        app: user
    spec:
      containers:
      - name: user-grpc
        image: ginuerzh/user-svc:0.0.3
        imagePullPolicy: IfNotPresent
        env:
        - name: GRPC_PORT
          value: "8000"
        ports:
        - name: grpc
          containerPort: 8000
          protocol: TCP
        readinessProbe:
          periodSeconds: 10
          initialDelaySeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8000"]
        livenessProbe:
          periodSeconds: 10
          initialDelaySeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8000"]
      - name: user-gw
        image: ginuerzh/user-svc:0.0.3
        imagePullPolicy: IfNotPresent
        env:
        - name: GW_PORT
          value: "8080"
        - name: GRPC_PORT
          value: "9001"
        command:
        - /bin/user-gw
        ports:
        - name: web
          containerPort: 8080
          protocol: TCP
      - name: envoy
        image: envoyproxy/envoy-alpine:v1.12.1
        ports:
        - name: ingress
          containerPort: 9001
        - name: admin
          containerPort: 9000
        volumeMounts:
        - name: envoy-config
          mountPath: /etc/envoy
      volumes:
      - name: envoy-config
        configMap:
          name: envoy-user-config
---
apiVersion: v1
kind: Service
metadata:
  name: user
  namespace: grpc-lb
spec:
  clusterIP: None
  selector:
    app: user
  ports:
  - name: api
    port: 9001
    targetPort: ingress
  - name: admin
    port: 9000
    targetPort: admin
