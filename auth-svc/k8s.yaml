apiVersion: v1
kind: Namespace
metadata:
  name: grpc-lb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
  namespace: grpc-lb
spec:
  replicas: 3
  minReadySeconds: 10
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      name: auth
      labels:
        app: auth
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
      - name: auth-grpc
        image: ginuerzh/auth-svc:0.0.4
        imagePullPolicy: IfNotPresent
        env:
        - name: GRPC_ADDR
          valueFrom:
            configMapKeyRef:
              name: auth-grpc-config
              key: grpc-addr
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: auth-grpc-config
              key: redis-url
        - name: TTL
          valueFrom:
            configMapKeyRef:
              name: auth-grpc-config
              key: ttl
        volumeMounts:
        - name: rsa-key
          mountPath: /ssl/
          readOnly: true
        ports:
        - name: grpc
          containerPort: 8000
          protocol: TCP
        readinessProbe:
          periodSeconds: 10
          initialDelaySeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8000"]
        livenessProbe:
          periodSeconds: 10
          initialDelaySeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8000"]
      - name: envoy
        image: envoyproxy/envoy-alpine:v1.12.1
        ports:
        - name: ingress
          containerPort: 9001
        - name: admin
          containerPort: 9000
        volumeMounts:
        - name: envoy-config
          mountPath: /etc/envoy
      volumes:
      - name: envoy-config
        configMap:
          name: envoy-auth-config
      - name: rsa-key
        secret:
          secretName: auth-rsa-key
          optional: false
---
apiVersion: v1
kind: Service
metadata:
  name: auth
  namespace: grpc-lb
spec:
  clusterIP: None
  selector:
    app: auth
  ports:
  - name: api
    port: 9001
    targetPort: ingress
  - name: admin
    port: 9000
    targetPort: admin
